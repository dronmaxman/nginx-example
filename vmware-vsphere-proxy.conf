## NGINX VMWARE vSphere publication with certificate auth

server {

        listen 80;
        server_name  vc.domain.ua;
        root /var/www/cert_bot;

        access_log /var/log/nginx/vc.domain.ua_access.log ;
        error_log /var/log/nginx/vc.domain.ua_error.log;

   location /.well-known/acme-challenge/ {
                access_log off;
                default_type "text/plain";
}
        return 301 https://$host$request_uri;
        }

server {
        listen 443 ssl;
        server_name  vc.domain.ua;

        access_log /var/log/nginx/access-vc.domain.ua.log;
        error_log /var/log/nginx/error_vc_domain-ua.log  debug;

        keepalive_timeout 70;
        ssl                  on;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_certificate /etc/ssl/certs/domain-ua.cer;
        ssl_certificate_key /etc/ssl/private/domain-ua-private.key;


        ssl_client_certificate /etc/nginx/SBCA.pem;
        ssl_trusted_certificate /etc/nginx/RTCA.pem;

        ssl_verify_client on;
        ssl_verify_depth 2;
        ssl_session_timeout  25m;
        ssl_session_cache   shared:SSL:10m;
        ssl_protocols      TLSv1.2 TLSv1.1 TLSv1;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';


    add_header Strict-Transport-Security "max-age=31536000";

# error pages

    location = /403.html {
           root   /var/www/html;
           allow all;
        }

location / {
		if ($ssl_client_verify !~ SUCCESS) { return 403;}

                proxy_set_header Host $http_host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_ssl_verify off; # No need on isolated LAN
                proxy_pass https://VC-IP; # VC IP Address
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_buffering off;
                client_max_body_size 0;
                proxy_read_timeout 36000s;
                proxy_redirect https://FQDN.LOCAL/ https://vc.domain.ua/; # read comment below
                #replace vcenter-hostname with your actual vcenter's hostname, and esxi with your nginx's server_name.
                }

location /websso/SAML2 {
       		if ($ssl_client_verify !~ SUCCESS) { return 403;}
                
                proxy_set_header Host FQDN.LOCAL; # your actual vcenter's hostname
                proxy_set_header X-Real-IP $remote_addr;
                proxy_ssl_verify off; # No need on isolated LAN
                proxy_pass https://FQDN.LOCAL;  # fqdn.local for VC
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_buffering off;
                client_max_body_size 0;
                proxy_read_timeout 36000s;
                proxy_ssl_session_reuse on;
                proxy_redirect https://FQDN.LOCAL/ https://vc.domain.ua/; # read comment below
                #replace vcenter-hostname with your actual vcenter's hostname, and esxi with your nginx's server_name.
        }

}

